<job id="dk_tool">
<script language="JavaScript">
//作成するファイルのフォーマット。
//[$date]には、YYYYMMDDにて日付が入る
//[$time]には、hhmissにて時刻が入る
//[$name]には、引数で指定されたファイル名が入る
var strNameFormat = '[$date]_[$name]';

//保管場所（本スクリプトファイルと同様のパスを保管場所にしたい場合は空のままにする）
var strPathArchiveFolder = '';

//ファイル名として不正な記号（＼/:*?"<>|）が指定された場合に置き換える文字
var REPLACE_NG_CHAR = '-';

//デスクトップに生成するショートカットファイル名
var strNameShortcutFile = '_archive';

//-----------------------------------------------
// メッセージ
var msg = new Array(10);
msg[0]='ファイルが既に存在しています。＼n既存のフォルダを開きます。＼n＼nファイル名[[$file_name]]';
msg[1]='テキストエディタのオープンに失敗しました。＼n＼nファイル名[[$editor_name]]';
msg[2]='引数の指定が不正です。デフォルトのフォルダ名で開きます。';
msg[3]='指定されたフォルダが存在しません。＼n指定した出力先を確認ください。＼n[[$folder_name]]＼n＼nデフォルトのフォルダ（スクリプトファイルと同様の場所）に出力します。';
msg[4]='フォルダ名を入力してください。';
msg[5]='';
msg[6]='';
msg[7]='';
msg[8]='';
msg[9]='';


//--------------------------------------------------
// メイン処理
var fso = new ActiveXObject('Scripting.FileSystemObject');
var i;
var objParm;
var aFile;
var aFolder;
var objWShell = new ActiveXObject('WScript.Shell');
var strMoveDir = fso.getParentFolderName(WScript.ScriptFullName);
var strFolderMoveTo;
var fileShortcut;


if(strPathArchiveFolder == ''){
	strFolderMoveTo = fso.getParentFolderName(WScript.ScriptFullName) + "/";
}
else{
	strFolderMoveTo = strPathArchiveFolder;
}

//引数をチェック -- フォルダ名を取得
objParm = WScript.arguments;

//パラメーターが指定されていないときの処理（ファイルダブルクリック時）
if(objParm.length == 0){
	// 確認ダイアログをだす
	WScript.Echo(WScript.ScriptFullName);

	// ショートカットをデスクトップに生成する
	strNameShortcutFile = setProperFileName(strNameShortcutFile);
	fileShortcut = objWShell.CreateShortcut(objWShell.SpecialFolders('Desktop') + '/' + strNameShortcutFile + '.lnk');
	fileShortcut.TargetPath = 'file:/' + WScript.ScriptFullName;
	fileShortcut.Save();
}
//パラメーターが指定されているときの処理（ドラッグ＆ドロップ時）
else{
	for(i = 0; i < objParm.length; i++){

		// パラメーターにフォルダが渡された
		if(fso.FolderExists(objParm(i))){
			aFolder = fso.GetFolder(objParm(i));
			aFolder.Name = setNamePrefix(aFolder.Name);

			//重複チェック

			// フォルダを移動
			fso.MoveFolder(aFolder, strFolderMoveTo);
			WScript.Echo("フォルダ");
		}

		// パラメーターにファイルが渡された
		else if(fso.FileExists(objParm(i))){
			aFile = fso.GetFile(objParm(i));
			aFile.Name = setNamePrefix(aFile.Name);

			//重複チェック

			// ファイルを移動
			fso.MoveFile(aFile, strFolderMoveTo);
			WScript.Echo("ファイル");
		}
	}
}

fso = null;
objWShell = null;


function setNamePrefix(strName){
	var strDate = getFormatedDate(new Date()); //日付を取得yyyymmdd
	var strTime = getFormatedTime(new Date()); //時刻を取得 hhmiss
	var strRsltName;

	//ファイル名を取得
	strRsltName = strNameFormat;
	strRsltName = strRsltName.replace('[$date]', strDate);
	strRsltName = strRsltName.replace('[$time]', strTime);
	strRsltName = strRsltName.replace('[$name]', strName);

	//ファイルに不適切な記号の処理
	strRsltName = setProperFileName(strRsltName);

	return strRsltName;
}

// 日付フォーマット作成用関数 yyyymmdd
function getFormatedDate(dtDate){
	var strDate; //日付文字列

	strDate = '';
	strDate += dtDate.getYear(); //年 yyyy
	strDate += formatString(dtDate.getMonth()+1, 2); //月 mm
	strDate += formatString(dtDate.getDate(), 2); //日 dd


	//yyyymmddのフォーマットで日付を返す
	return strDate;
}

// 日付フォーマット作成用関数 hhmiss
function getFormatedTime(dtDate){
	var strTime; //時刻文字列
	strTime = '';
	strTime += formatString(dtDate.getHours(), 2); //時 hh
	strTime += '';
	strTime += formatString(dtDate.getMinutes(), 2); //分 mi
	strTime += '';
	strTime += formatString(dtDate.getSeconds(), 2); //秒 ss

	//hhmissのフォーマットで時刻を返す
	return strTime;
}

// 例）
// 2→02にする。
// numStrLen 返す文字列の長さを指定
function formatString(strNum, numStrLen){
	var strBuf;
	var i;

	strBuf = '' + strNum;
	//元の文字よりも返す文字列の指定のほうが短い場合は何もしない
	if(strBuf.length < numStrLen){
		// 数値の前に0を付与
		for(i=strBuf.length; i < numStrLen; i++){
			strBuf = '0' + strBuf;
		}
	}
	return strBuf;
}

// ファイル名として不適切な文字を置き換える
function setProperFileName(strName){
	return strName.replace(/[\/:*?"<>|]/g, REPLACE_NG_CHAR);
}

</script>
</job>
